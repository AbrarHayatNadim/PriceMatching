<Activity mc:Ignorable="sap sap2010" x:Class="dbtest" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="itemQueryLSNew" Type="InArgument(x:String)" />
    <x:Property Name="itemQueryVG" Type="InArgument(x:String)" />
    <x:Property Name="itemQueryBig" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1794.4,3225.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>dbtest_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="dbtest" sap:VirtualizedContainerService.HintSize="496,3160.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="conn" />
      <Variable x:TypeArguments="sd:DataTable" Name="otkItemQueryResultDT" />
      <Variable x:TypeArguments="x:String" Name="queryItemNo" />
      <Variable x:TypeArguments="sd:DataTable" Name="unitpriceDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="costPriceDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="otkItemQueryresultWithoutEndDate" />
      <Variable x:TypeArguments="x:String" Name="queryItemVG" />
      <Variable x:TypeArguments="x:String" Name="queryItemBig" />
      <Variable x:TypeArguments="sd:DataTable" Name="bigItemQueryResultDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="bigItemQueryresultWithoutEndDate" />
      <Variable x:TypeArguments="x:String" Name="dateForquery" />
      <Variable x:TypeArguments="sd:DataTable" Name="VGItemQueryResultDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="VGItemQueryresultWithoutEndDate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="Microsoft.Data.SqlClient" ConnectionString="Data Source=TFPTEST;Initial Catalog=TFP_MIRROR;Integrated Security=True;Encrypt=False" DatabaseConnection="[conn]" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_6">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="697.6,164.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
            <ueab:ExcelProcessScopeX.Body>
              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="601.6,784" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="539.2,672" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="BIG-WORKING.xlsx">
                    <ueab:ExcelApplicationCard.Body>
                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="505.6,402.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;ls code&quot;).Cell(&quot;E2131&quot;)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="443.2,160" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                            <ueab:ReadCellValueX.SaveTo>
                              <OutArgument x:TypeArguments="x:String">[queryItemNo]</OutArgument>
                            </ueab:ReadCellValueX.SaveTo>
                          </ueab:ReadCellValueX>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="443.2,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[queryItemNo]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </WriteLine>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelApplicationCard.Body>
                  </ueab:ExcelApplicationCard>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelProcessScopeX.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ueab:ExcelProcessScopeX>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[dateForquery]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[DateTime.Now.AddDays(-7).ToString("yyyy-MM-dd")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[queryItemNo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[itemQueryLSNew]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[queryItemVG]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[itemQueryVG]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[queryItemBig]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[itemQueryBig]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[otkItemQueryResultDT]" DisplayName="OTK Run query" ExistingDbConnection="[conn]" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[&quot;SELECT A.*,C.[Description]&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;FROM&#x9;&#xD;&#xA;&#x9;(SELECT convert(varchar,A.[Starting Date], 23) as EffectiveDate,convert(varchar,A.[Ending Date], 23) as PriceEnded,A.[Sales Code],&#xD;&#xA;&#x9;&#x9;A.[Item No_],A.[Unit of Measure Code],A.[Unit Price] ,&#xD;&#xA;&#x9;&#x9;round(sum(A.[Unit Price Including VAT]-[Profit (LCY)]),3) as [Cost From Markup],&#xD;&#xA;        round(sum(A.[Unit Price])-sum(A.[Unit Price Including VAT]-A.[Profit (LCY)]),3) as [Variance],&#x9;&#xD;&#xA;       ROW_NUMBER() OVER(PARTITION BY [Item No_],[Unit of Measure Code] ,A.[Sales Code] ORDER BY convert(varchar,[Starting Date], 23) DESC) Rank&#xD;&#xA;FROM [dbo].[TFP Retail Sdn Bhd$Sales Price] AS A&#xD;&#xA; LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;where convert(varchar,[Starting Date], 23) &lt;=&quot;+dateForquery+&quot; &#xD;&#xA;--AND C.[Division Code]='D13'&#xD;&#xA;and convert(varchar,[Ending Date], 23)='1753-01-01' &#xD;&#xA;--or convert(varchar,[Ending Date], 23)&gt;='2021-11-15'&#xD;&#xA;&#x9;&#x9;and A.[Sales Code] in('OTK')&#xD;&#xA;&#x9;&#x9;and [Item No_] in(&quot;+queryItemNo+&quot;)  &#xD;&#xA;&#x9;&#x9;group by convert(varchar,A.[Starting Date], 23),convert(varchar,A.[Ending Date], 23),A.[Sales Code],A.[Item No_],A.[Unit of Measure Code],A.[Unit Price]&#xD;&#xA;&#x9;&#x9;--having round(sum([Unit Price])-sum([Unit Price Including VAT]-[Profit (LCY)]),3)&gt;0&#xD;&#xA;) as A&#xD;&#xA;LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;where  A.Rank='1' &#xD;&#xA;&quot;]">
      <ui:ExecuteQuery.Parameters>
        <InArgument x:TypeArguments="x:String" x:Key="itemNo">[queryItemNo]</InArgument>
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[otkItemQueryresultWithoutEndDate]" DisplayName="OTK Run query" ExistingDbConnection="[conn]" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="[&quot;SELECT A.*,C.[Description]&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;FROM&#x9;&#xD;&#xA;&#x9;(SELECT convert(varchar,A.[Starting Date], 23) as EffectiveDate,convert(varchar,A.[Ending Date], 23) as PriceEnded,A.[Sales Code],&#xD;&#xA;&#x9;&#x9;A.[Item No_],A.[Unit of Measure Code],A.[Unit Price] ,&#xD;&#xA;&#x9;&#x9;round(sum(A.[Unit Price Including VAT]-[Profit (LCY)]),3) as [Cost From Markup],&#xD;&#xA;        round(sum(A.[Unit Price])-sum(A.[Unit Price Including VAT]-A.[Profit (LCY)]),3) as [Variance],&#x9;&#xD;&#xA;       ROW_NUMBER() OVER(PARTITION BY [Item No_],[Unit of Measure Code] ,A.[Sales Code] ORDER BY convert(varchar,[Starting Date], 23) DESC) Rank&#xD;&#xA;FROM [dbo].[TFP Retail Sdn Bhd$Sales Price] AS A&#xD;&#xA; LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;where convert(varchar,[Starting Date], 23) &lt;=&quot;+dateForquery+&quot; &#xD;&#xA;--AND C.[Division Code]='D13'&#xD;&#xA;--and convert(varchar,[Ending Date], 23)='1753-01-01' &#xD;&#xA;--or convert(varchar,[Ending Date], 23)&gt;='2021-11-15'&#xD;&#xA;&#x9;&#x9;and A.[Sales Code] in('OTK')&#xD;&#xA;&#x9;&#x9;and [Item No_] in(&quot;+queryItemNo+&quot;)  &#xD;&#xA;&#x9;&#x9;group by convert(varchar,A.[Starting Date], 23),convert(varchar,A.[Ending Date], 23),A.[Sales Code],A.[Item No_],A.[Unit of Measure Code],A.[Unit Price]&#xD;&#xA;&#x9;&#x9;--having round(sum([Unit Price])-sum([Unit Price Including VAT]-[Profit (LCY)]),3)&gt;0&#xD;&#xA;) as A&#xD;&#xA;LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;where  A.Rank='1' &#xD;&#xA;&quot;]">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[bigItemQueryResultDT]" DisplayName="BIG Run query" ExistingDbConnection="[conn]" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" Sql="[&quot;SELECT A.*,C.[Description]&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;FROM&#x9;&#xD;&#xA;&#x9;(SELECT convert(varchar,A.[Starting Date], 23) as EffectiveDate,convert(varchar,A.[Ending Date], 23) as PriceEnded,A.[Sales Code],&#xD;&#xA;&#x9;&#x9;A.[Item No_],A.[Unit of Measure Code],A.[Unit Price] ,&#xD;&#xA;&#x9;&#x9;round(sum(A.[Unit Price Including VAT]-[Profit (LCY)]),3) as [Cost From Markup],&#xD;&#xA;        round(sum(A.[Unit Price])-sum(A.[Unit Price Including VAT]-A.[Profit (LCY)]),3) as [Variance],&#x9;&#xD;&#xA;       ROW_NUMBER() OVER(PARTITION BY [Item No_],[Unit of Measure Code] ,A.[Sales Code] ORDER BY convert(varchar,[Starting Date], 23) DESC) Rank&#xD;&#xA;FROM [dbo].[TFP Retail Sdn Bhd$Sales Price] AS A&#xD;&#xA; LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;where convert(varchar,[Starting Date], 23) &lt;=&quot;+dateForquery+&quot;&#xD;&#xA;--AND C.[Division Code]='D13'&#xD;&#xA;and convert(varchar,[Ending Date], 23)='1753-01-01' &#xD;&#xA;--or convert(varchar,[Ending Date], 23)&gt;='2021-11-15'&#xD;&#xA;&#x9;&#x9;and A.[Sales Code] in('BIG')&#xD;&#xA;&#x9;&#x9;and [Item No_] in(&quot;+queryItemBig+&quot;)  &#xD;&#xA;&#x9;&#x9;group by convert(varchar,A.[Starting Date], 23),convert(varchar,A.[Ending Date], 23),A.[Sales Code],A.[Item No_],A.[Unit of Measure Code],A.[Unit Price]&#xD;&#xA;&#x9;&#x9;--having round(sum([Unit Price])-sum([Unit Price Including VAT]-[Profit (LCY)]),3)&gt;0&#xD;&#xA;) as A&#xD;&#xA;LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;where  A.Rank='1' &#xD;&#xA;&quot;]">
      <ui:ExecuteQuery.Parameters>
        <InArgument x:TypeArguments="x:String" x:Key="itemNo">[queryItemNo]</InArgument>
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[bigItemQueryresultWithoutEndDate]" DisplayName="BIG Run query" ExistingDbConnection="[conn]" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" Sql="[&quot;SELECT A.*,C.[Description]&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;FROM&#x9;&#xD;&#xA;&#x9;(SELECT convert(varchar,A.[Starting Date], 23) as EffectiveDate,convert(varchar,A.[Ending Date], 23) as PriceEnded,A.[Sales Code],&#xD;&#xA;&#x9;&#x9;A.[Item No_],A.[Unit of Measure Code],A.[Unit Price] ,&#xD;&#xA;&#x9;&#x9;round(sum(A.[Unit Price Including VAT]-[Profit (LCY)]),3) as [Cost From Markup],&#xD;&#xA;        round(sum(A.[Unit Price])-sum(A.[Unit Price Including VAT]-A.[Profit (LCY)]),3) as [Variance],&#x9;&#xD;&#xA;       ROW_NUMBER() OVER(PARTITION BY [Item No_],[Unit of Measure Code] ,A.[Sales Code] ORDER BY convert(varchar,[Starting Date], 23) DESC) Rank&#xD;&#xA;FROM [dbo].[TFP Retail Sdn Bhd$Sales Price] AS A&#xD;&#xA; LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;where convert(varchar,[Starting Date], 23) &lt;=&quot;+dateForquery+&quot;&#xD;&#xA;--AND C.[Division Code]='D13'&#xD;&#xA;--and convert(varchar,[Ending Date], 23)='1753-01-01' &#xD;&#xA;--or convert(varchar,[Ending Date], 23)&gt;='2021-11-15'&#xD;&#xA;&#x9;&#x9;and A.[Sales Code] in('BIG')&#xD;&#xA;&#x9;&#x9;and [Item No_] in(&quot;+queryItemBig+&quot;)  &#xD;&#xA;&#x9;&#x9;group by convert(varchar,A.[Starting Date], 23),convert(varchar,A.[Ending Date], 23),A.[Sales Code],A.[Item No_],A.[Unit of Measure Code],A.[Unit Price]&#xD;&#xA;&#x9;&#x9;--having round(sum([Unit Price])-sum([Unit Price Including VAT]-[Profit (LCY)]),3)&gt;0&#xD;&#xA;) as A&#xD;&#xA;LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;where  A.Rank='1' &#xD;&#xA;&quot;]">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[VGItemQueryResultDT]" DisplayName="VG Run query" ExistingDbConnection="[conn]" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" Sql="[&quot;SELECT A.*,C.[Description]&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;FROM&#x9;&#xD;&#xA;&#x9;(SELECT convert(varchar,A.[Starting Date], 23) as EffectiveDate,convert(varchar,A.[Ending Date], 23) as PriceEnded,A.[Sales Code],&#xD;&#xA;&#x9;&#x9;A.[Item No_],A.[Unit of Measure Code],A.[Unit Price] ,&#xD;&#xA;&#x9;&#x9;round(sum(A.[Unit Price Including VAT]-[Profit (LCY)]),3) as [Cost From Markup],&#xD;&#xA;        round(sum(A.[Unit Price])-sum(A.[Unit Price Including VAT]-A.[Profit (LCY)]),3) as [Variance],&#x9;&#xD;&#xA;       ROW_NUMBER() OVER(PARTITION BY [Item No_],[Unit of Measure Code] ,A.[Sales Code] ORDER BY convert(varchar,[Starting Date], 23) DESC) Rank&#xD;&#xA;FROM [dbo].[TFP Retail Sdn Bhd$Sales Price] AS A&#xD;&#xA; LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;where convert(varchar,[Starting Date], 23) &lt;=&quot;+dateForquery+&quot; &#xD;&#xA;--AND C.[Division Code]='D13'&#xD;&#xA;and convert(varchar,[Ending Date], 23)='1753-01-01' &#xD;&#xA;--or convert(varchar,[Ending Date], 23)&gt;='2021-11-15'&#xD;&#xA;&#x9;&#x9;and A.[Sales Code] in('VG')&#xD;&#xA;&#x9;&#x9;and [Item No_] in(&quot;+queryItemVG+&quot;)  &#xD;&#xA;&#x9;&#x9;group by convert(varchar,A.[Starting Date], 23),convert(varchar,A.[Ending Date], 23),A.[Sales Code],A.[Item No_],A.[Unit of Measure Code],A.[Unit Price]&#xD;&#xA;&#x9;&#x9;--having round(sum([Unit Price])-sum([Unit Price Including VAT]-[Profit (LCY)]),3)&gt;0&#xD;&#xA;) as A&#xD;&#xA;LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;where  A.Rank='1' &#xD;&#xA;&quot;]">
      <ui:ExecuteQuery.Parameters>
        <InArgument x:TypeArguments="x:String" x:Key="itemNo">[queryItemNo]</InArgument>
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[VGItemQueryresultWithoutEndDate]" DisplayName="VG Run query" ExistingDbConnection="[conn]" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_7" Sql="[&quot;SELECT A.*,C.[Description]&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;FROM&#x9;&#xD;&#xA;&#x9;(SELECT convert(varchar,A.[Starting Date], 23) as EffectiveDate,convert(varchar,A.[Ending Date], 23) as PriceEnded,A.[Sales Code],&#xD;&#xA;&#x9;&#x9;A.[Item No_],A.[Unit of Measure Code],A.[Unit Price] ,&#xD;&#xA;&#x9;&#x9;round(sum(A.[Unit Price Including VAT]-[Profit (LCY)]),3) as [Cost From Markup],&#xD;&#xA;        round(sum(A.[Unit Price])-sum(A.[Unit Price Including VAT]-A.[Profit (LCY)]),3) as [Variance],&#x9;&#xD;&#xA;       ROW_NUMBER() OVER(PARTITION BY [Item No_],[Unit of Measure Code] ,A.[Sales Code] ORDER BY convert(varchar,[Starting Date], 23) DESC) Rank&#xD;&#xA;FROM [dbo].[TFP Retail Sdn Bhd$Sales Price] AS A&#xD;&#xA; LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;where convert(varchar,[Starting Date], 23) &lt;=&quot;+dateForquery+&quot; &#xD;&#xA;--AND C.[Division Code]='D13'&#xD;&#xA;--and convert(varchar,[Ending Date], 23)='1753-01-01' &#xD;&#xA;--or convert(varchar,[Ending Date], 23)&gt;='2021-11-15'&#xD;&#xA;&#x9;&#x9;and A.[Sales Code] in('VG')&#xD;&#xA;&#x9;&#x9;and [Item No_] in(&quot;+queryItemVG+&quot;)  &#xD;&#xA;&#x9;&#x9;group by convert(varchar,A.[Starting Date], 23),convert(varchar,A.[Ending Date], 23),A.[Sales Code],A.[Item No_],A.[Unit of Measure Code],A.[Unit Price]&#xD;&#xA;&#x9;&#x9;--having round(sum([Unit Price])-sum([Unit Price Including VAT]-[Profit (LCY)]),3)&gt;0&#xD;&#xA;) as A&#xD;&#xA;LEFT OUTER JOIN [dbo].[TFP Retail Sdn Bhd$Item]as C on C.[No_]=A.[Item No_]&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;where  A.Rank='1' &#xD;&#xA;&quot;]">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:MergeDataTable Destination="[otkItemQueryResultDT]" DisplayName="OTK Merge Data Table" sap:VirtualizedContainerService.HintSize="433.6,134.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[otkItemQueryresultWithoutEndDate]" />
    <ui:RemoveDuplicateRows DataTable="[otkItemQueryResultDT]" DisplayName="OTK Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[otkItemQueryResultDT]" />
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[otkItemQueryResultDT]" DisplayName="OTK Write Range Workbook" sap:VirtualizedContainerService.HintSize="433.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="resultNewOTK" WorkbookPath="OTK-WORKING.xlsx" />
    <ui:MergeDataTable Destination="[bigItemQueryResultDT]" DisplayName="BIG Merge Data Table" sap:VirtualizedContainerService.HintSize="433.6,134.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Add" Source="[bigItemQueryresultWithoutEndDate]" />
    <ui:RemoveDuplicateRows DataTable="[bigItemQueryResultDT]" DisplayName="BIG Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_2" OutputDataTable="[bigItemQueryResultDT]" />
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[bigItemQueryResultDT]" DisplayName="BIG Write Range Workbook" sap:VirtualizedContainerService.HintSize="433.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_5" SheetName="resultNewBIG" WorkbookPath="BIG-WORKING.xlsx" />
    <ui:MergeDataTable Destination="[VGItemQueryResultDT]" DisplayName="VG Merge Data Table" sap:VirtualizedContainerService.HintSize="433.6,134.4" sap2010:WorkflowViewState.IdRef="MergeDataTable_3" MissingSchemaAction="Add" Source="[VGItemQueryresultWithoutEndDate]" />
    <ui:RemoveDuplicateRows DataTable="[VGItemQueryResultDT]" DisplayName="VG Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_3" OutputDataTable="[VGItemQueryResultDT]" />
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[VGItemQueryResultDT]" DisplayName="VG Write Range Workbook" sap:VirtualizedContainerService.HintSize="433.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_6" SheetName="resultNewVG" WorkbookPath="VG-WORKING.xlsx" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,274.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:FilterDataTable DataTable="[otkItemQueryResultDT]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="387.2,162.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[unitpriceDT]" SelectColumnsMode="Keep">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="NOTEMPTY">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
                  </ui:FilterOperationArgument.Column>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
          </ui:FilterDataTable>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_4">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,274.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:FilterDataTable DataTable="[otkItemQueryResultDT]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="387.2,162.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[costPriceDT]" SelectColumnsMode="Keep">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="NOTEMPTY">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
                  </ui:FilterOperationArgument.Column>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <InArgument x:TypeArguments="x:Int32">[6]</InArgument>
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
          </ui:FilterDataTable>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_5">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="688,164.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
            <ueab:ExcelProcessScopeX.Body>
              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,853.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="529.6,741.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="2023.12 Price Matching v1.0-by-nadim.xlsb">
                    <ueab:ExcelApplicationCard.Body>
                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,472" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;BIG-Working&quot;).Range(&quot;L4:L2130&quot;)]" DisplayName="Write DataTable to Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,160" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[unitpriceDT]" />
                          <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;BIG-Working&quot;).Range(&quot;M4:M2130&quot;)]" DisplayName="Write DataTable to Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,160" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False" Source="[costPriceDT]" />
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelApplicationCard.Body>
                  </ueab:ExcelApplicationCard>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelProcessScopeX.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ueab:ExcelProcessScopeX>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>